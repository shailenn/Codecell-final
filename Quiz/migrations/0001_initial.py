# Generated by Django 2.2.5 on 2019-10-06 14:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
		
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Category')),
                ('image', models.ImageField(blank=True, null=True, upload_to='Images/Categories/', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(blank=True, help_text='Quiz description', verbose_name='Description')),
                ('level', models.CharField(choices=[('Hard', 'Hard'), ('Intermediate', 'Intermediate'), ('Easy', 'Easy')], default='Easy', help_text='Level of difficultly', max_length=10, verbose_name='Level')),
                ('url', models.SlugField(help_text='A user friendly url', max_length=60, verbose_name='User Friendly Url')),
                ('random_order', models.BooleanField(default=True, help_text='Display the questions in Random Order ?', verbose_name='Random Order')),
                ('max_questions', models.PositiveIntegerField(default=1, help_text='Number of questions to be displayed on each attempt', verbose_name='Max_questions')),
                ('single_attempt', models.BooleanField(default=False, help_text='If selected, user will be allowed only one attempt for this quiz', verbose_name='Single Attempt')),
                ('pass_mark', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Percentage required to pass', validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Passing Marks')),
                ('success_text', models.TextField(blank=True, help_text='Displayed if user passes.', verbose_name='Success Text')),
                ('fail_text', models.TextField(blank=True, help_text='Displayed if user fails', verbose_name='Fail Text')),
                ('draft', models.BooleanField(blank=True, default=False, help_text="Quiz won't be available to student if this is selected, only for internal assessment this quiz will be available", verbose_name='Draft')),
                ('category', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='Quiz.Category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('figure', models.ImageField(blank=True, null=True, upload_to='Images/Questions/', verbose_name='Question Image')),
                ('content', models.CharField(help_text='Enter the Question (text)', max_length=1000, verbose_name='Question')),
                ('explanation', models.TextField(blank=True, help_text='Explanation to be shown after the question is answered ', max_length=2000, verbose_name='Explanation')),
                ('marks', models.PositiveSmallIntegerField(default=1, help_text='Marks alloted to this question', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Marks')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Quiz.Category', verbose_name='Category')),
                ('quiz', models.ManyToManyField(blank=True, to='Quiz.Quiz', verbose_name='Quiz')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['category'],
            },
        ),
		migrations.CreateModel(
            name='MCQ',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Quiz.Question')),
                ('answer_order', models.CharField(choices=[('content', 'Content'), ('random', 'Random')], help_text='The order in which the answer options are to be displayed', max_length=30, verbose_name='Answer Options Order')),
                ('single_correct', models.BooleanField(default=True, help_text='If selected, only one choice should have a correct answer', verbose_name='Single Correct')),
            ],
            options={
                'verbose_name': 'Multiple Choice Question',
            },
            bases=('Quiz.question',),
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempted_on', models.DateTimeField(auto_now_add=True, verbose_name='Attempted Quiz on ')),
                ('Questions_attempted', models.PositiveSmallIntegerField(default=0, verbose_name='Question Attempted')),
                ('Questions_correct', models.PositiveSmallIntegerField(default=0, verbose_name='Questions Correctly answered')),
                ('marks', models.PositiveSmallIntegerField(default=0, verbose_name='Marks Scored')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Quiz.Quiz', verbose_name='Quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Progress of Student',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(help_text='Enter the answer text to be displayed', max_length=1000, verbose_name='Answer text')),
                ('correct', models.BooleanField(default=False, help_text='Is this a correct Answer ?', verbose_name='Correct')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Quiz.MCQ', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
            },
        ),
    ]
